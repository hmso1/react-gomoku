{"version":3,"sources":["components/GomokuGameBoard/GomokuGameBoard.js","components/GameInfo/GameInfo.js","components/RecordList/RecordList.js","hooks/useGomoku/useGomoku.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["GomokuGameBoardContainer","styled","div","props","theme","squareSize","size","BoardBackgrounContainer","SquareBackground","Square","Gomoku","BoardContainer","GomokuBoardBackground","memo","generateSquaresBackgound","Array","fill","map","square","index","GomokuBoard","squares","onClick","generateGomokuBoard","squareRow","rowIndex","colIndex","className","length","GomokuGameBoard","boardSize","GameInfoContainer","GameDescContainer","maxBoardSize","Player","span","GameSettingContainer","GameBoardSizeDesc","GameBoardSizeInput","input","GameInfo","stepNumber","winnerStepNumber","inputValue","debounceForInputChange","type","ref","onChange","RecordListContainer","ol","RecordListItem","li","RecordLisBtn","button","EmptyRecordListItem","RecordList","history","backToThePast","generateRecordBtn","record","desc","useGomoku","useState","setBoardSize","setHistory","setStepNumber","setWinnerStepNumber","useRef","useEffect","current","value","checkTotalGomokuWithDirection","useMemo","x","y","xDirection","yDirection","targetColor","total","currentX","currentY","console","log","checkWinner","handleInputChange","e","newValue","Number","target","useCallback","func","timer","args","context","this","clearTimeout","setTimeout","apply","debounce","currentXIndex","currentYIndex","copyOfHistory","slice","copyOfRecord","gomokuColor","newRecord","row","col","concat","Title","h1","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8a97cd5.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { memo } from \"react\";\n\nconst GomokuGameBoardContainer = styled.div`\n  position: relative;\n  width: ${(props) => props.theme.squareSize * props.size}px;\n  margin: 0 auto;\n`;\n\nconst BoardBackgrounContainer = styled.div`\n  width: ${(props) => props.size * props.theme.squareSize}px;\n  height: ${(props) => props.size * props.theme.squareSize}px;\n  border: 1px solid #000;\n  display: flex;\n  flex-wrap: wrap;\n  position: absolute;\n  left: ${(props) => props.theme.squareSize / 2}px;\n  top: ${(props) => props.theme.squareSize / 2}px;\n`;\n\nconst SquareBackground = styled.div`\n  width: ${(props) => props.theme.squareSize}px;\n  height: ${(props) => props.theme.squareSize}px;\n  box-sizing: border-box;\n  border: 1px solid #000;\n`;\n\nconst Square = styled(SquareBackground)`\n  position: relative;\n  border: none;\n`;\n\nconst Gomoku = styled.div`\n  width: ${(props) => props.theme.squareSize * 0.75}px;\n  height: ${(props) => props.theme.squareSize * 0.75}px;\n  border-radius: 50%;\n  margin: ${(props) => props.theme.squareSize * 0.25 * 0.5}px auto;\n`;\n\nconst BoardContainer = styled.div`\n  width: ${(props) => props.size * props.theme.squareSize}px;\n  height: ${(props) => props.size * props.theme.squareSize}px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst GomokuBoardBackground = memo(({ size }) => {\n  const generateSquaresBackgound = Array(size * size)\n    .fill(null)\n    .map((square, index) => <SquareBackground key={index}></SquareBackground>);\n  return (\n    <BoardBackgrounContainer size={size}>\n      {generateSquaresBackgound}\n    </BoardBackgrounContainer>\n  );\n});\n\nconst GomokuBoard = memo(({ squares, onClick }) => {\n  const generateGomokuBoard = squares.map((squareRow, rowIndex) =>\n    squareRow.map((square, colIndex) => (\n      <Square\n        key={colIndex + squares.length * rowIndex}\n        onClick={() => onClick(rowIndex, colIndex)}\n      >\n        {square && <Gomoku className={square} />}\n      </Square>\n    ))\n  );\n\n  return (\n    <BoardContainer size={squares.length}>{generateGomokuBoard}</BoardContainer>\n  );\n});\n\nexport const GomokuGameBoard = memo(({ boardSize, squares, onClick }) => {\n  return (\n    <GomokuGameBoardContainer size={boardSize}>\n      <GomokuBoardBackground size={boardSize - 1} />\n      <GomokuBoard squares={squares} onClick={onClick} />\n    </GomokuGameBoardContainer>\n  );\n});\n","import styled from \"styled-components\";\nimport { memo } from \"react\";\nconst GameInfoContainer = styled.div``;\n\nconst GameDescContainer = styled.div`\n  width: ${(props) => props.theme.maxBoardSize * props.theme.squareSize}px;\n  display: flex;\n  margin: 0 auto;\n  justify-content: space-between;\n`;\n\nconst Player = styled.span`\n  margin: auto 0;\n`;\n\nconst GameSettingContainer = styled.div``;\n\nconst GameBoardSizeDesc = styled.div`\n  display: inline;\n`;\n\nconst GameBoardSizeInput = styled.input`\n  width: 40px;\n`;\n\nexport const GameInfo = memo(\n  ({ stepNumber, winnerStepNumber, inputValue, debounceForInputChange }) => {\n    return (\n      <GameInfoContainer>\n        <GameDescContainer>\n          {winnerStepNumber === stepNumber - 1 ? (\n            <Player>{winnerStepNumber % 2 ? \"黑子\" : \"白子\"}勝出</Player>\n          ) : (\n            <Player>下一位玩家：{stepNumber % 2 ? \"黑子\" : \"白子\"}</Player>\n          )}\n          <GameSettingContainer>\n            <GameBoardSizeDesc>棋盤大少（5-19）：</GameBoardSizeDesc>\n            <GameBoardSizeInput\n              type=\"number\"\n              ref={inputValue}\n              onChange={debounceForInputChange}\n            />\n          </GameSettingContainer>\n        </GameDescContainer>\n      </GameInfoContainer>\n    );\n  }\n);\n","import styled from \"styled-components\";\nimport { memo } from \"react\";\n\nconst RecordListContainer = styled.ol`\n  width: ${(props) => props.theme.maxBoardSize * props.theme.squareSize}px;\n  list-style-type: none;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin: 10px auto;\n  padding: 0;\n`;\n\nconst RecordListItem = styled.li`\n  margin: 5px 0;\n`;\n\nconst RecordLisBtn = styled.button`\n  width: 112px;\n`;\n\nconst EmptyRecordListItem = styled(RecordLisBtn)`\n  background-color: #000;\n  visibility: hidden;\n`;\n\nexport const RecordList = memo(({ history, backToThePast }) => {\n  const generateRecordBtn = history.map((record, index) => {\n    const desc = index ? \"回到第\" + index + \"步\" : \"回到遊戲開始\";\n    const handleClick = () => backToThePast(index);\n    return (\n      <RecordListItem key={index}>\n        <RecordLisBtn onClick={handleClick}>{desc}</RecordLisBtn>\n      </RecordListItem>\n    );\n  });\n\n  return (\n    <RecordListContainer>\n      {generateRecordBtn.length - 1 !== 0 && generateRecordBtn}\n      <EmptyRecordListItem />\n      <EmptyRecordListItem />\n      <EmptyRecordListItem />\n    </RecordListContainer>\n  );\n});\n","import { useState, useRef, useEffect, useMemo, useCallback } from \"react\";\n\nconst debounce = (func) => {\n  let timer;\n  return function (...args) {\n    const context = this;\n    if (timer) clearTimeout(timer);\n    timer = setTimeout(() => {\n      timer = null;\n      func.apply(context, args);\n    }, 500);\n  };\n};\n\nexport default function useGomoku() {\n  const [boardSize, setBoardSize] = useState(19);\n  const [history, setHistory] = useState(\n    Array(1).fill(Array(19).fill(Array(19).fill(null)))\n  );\n  const [stepNumber, setStepNumber] = useState(1);\n  const [winnerStepNumber, setWinnerStepNumber] = useState(false);\n  const inputValue = useRef();\n\n  useEffect(() => (inputValue.current.value = 19), []);\n\n  const checkTotalGomokuWithDirection = useMemo(\n    () => (record, x, y, xDirection, yDirection) => {\n      let targetColor = record[x][y];\n      let total = 0;\n      let currentX = x;\n      let currentY = y;\n\n      do {\n        if (\n          currentX + xDirection < 0 ||\n          currentY + yDirection < 0 ||\n          currentX + xDirection >= boardSize ||\n          currentY + yDirection >= boardSize\n        )\n          break;\n\n        if (\n          record[currentX + xDirection][currentY + yDirection] === targetColor\n        ) {\n          total++;\n          currentX = currentX + xDirection;\n          currentY = currentY + yDirection;\n        } else {\n          break;\n        }\n      } while (true);\n      console.log(total);\n      return total;\n    },\n    [boardSize]\n  );\n\n  const checkWinner = useMemo(\n    () => (record, x, y) => {\n      if (\n        checkTotalGomokuWithDirection(record, x, y, 0, 1) +\n          checkTotalGomokuWithDirection(record, x, y, 0, -1) >=\n          4 ||\n        checkTotalGomokuWithDirection(record, x, y, 1, 0) +\n          checkTotalGomokuWithDirection(record, x, y, -1, 0) >=\n          4 ||\n        checkTotalGomokuWithDirection(record, x, y, 1, 1) +\n          checkTotalGomokuWithDirection(record, x, y, -1, -1) >=\n          4 ||\n        checkTotalGomokuWithDirection(record, x, y, -1, 1) +\n          checkTotalGomokuWithDirection(record, x, y, 1, -1) >=\n          4\n      )\n        return true;\n\n      return false;\n    },\n    [checkTotalGomokuWithDirection]\n  );\n\n  const handleInputChange = useMemo(\n    () => (e) => {\n      let newValue = Number(e.target.value);\n      if (newValue < 5) newValue = 5;\n      if (newValue > 19) newValue = 19;\n\n      setStepNumber(1);\n      setBoardSize(newValue);\n      setWinnerStepNumber(false);\n      setHistory(\n        Array(1).fill(Array(newValue).fill(Array(newValue).fill(null)))\n      );\n      inputValue.current.value = newValue;\n    },\n    []\n  );\n\n  const debounceForInputChange = useCallback(\n    () => debounce(handleInputChange),\n    [handleInputChange]\n  );\n\n  const onClick = useCallback(\n    (currentXIndex, currentYIndex) => {\n      const copyOfHistory = history.slice(0, stepNumber);\n      const copyOfRecord = history[stepNumber - 1].slice();\n      const gomokuColor = stepNumber % 2 ? \"b\" : \"w\";\n\n      if (copyOfRecord[currentXIndex][currentYIndex]) return;\n\n      if (stepNumber <= winnerStepNumber) {\n        setWinnerStepNumber(false);\n      }\n\n      if (winnerStepNumber === stepNumber - 1) return;\n\n      const newRecord = Array(\n        copyOfRecord.map((row, rowIndex) => {\n          if (rowIndex !== currentXIndex) return row;\n          return row.map((col, colIndex) => {\n            if (colIndex !== currentYIndex) return col;\n            return gomokuColor;\n          });\n        })\n      );\n      setHistory(copyOfHistory.concat(newRecord));\n      setStepNumber(stepNumber + 1);\n      if (checkWinner(newRecord[0], currentXIndex, currentYIndex))\n        return setWinnerStepNumber(stepNumber);\n    },\n    [checkWinner, history, stepNumber, winnerStepNumber]\n  );\n\n  const backToThePast = useCallback(\n    (index) => {\n      setStepNumber(index + 1);\n    },\n    [setStepNumber]\n  );\n\n  return {\n    boardSize,\n    history,\n    stepNumber,\n    onClick,\n    winnerStepNumber,\n    inputValue,\n    debounceForInputChange,\n    backToThePast,\n  };\n}\n","import \"./App.css\";\r\nimport styled from \"styled-components\";\r\nimport { GomokuGameBoard } from \"../GomokuGameBoard\";\r\nimport { GameInfo } from \"../GameInfo\";\r\nimport { RecordList } from \"../RecordList/RecordList\";\r\nimport useGomoku from \"../../hooks/useGomoku\";\r\n\r\nconst Title = styled.h1`\r\n  text-align: center;\r\n`;\r\n\r\nfunction App() {\r\n  const {\r\n    boardSize,\r\n    history,\r\n    stepNumber,\r\n    onClick,\r\n    winnerStepNumber,\r\n    inputValue,\r\n    debounceForInputChange,\r\n    backToThePast,\r\n  } = useGomoku();\r\n\r\n  return (\r\n    <div>\r\n      <Title>五子棋遊戲</Title>\r\n      <GomokuGameBoard\r\n        boardSize={boardSize}\r\n        squares={history[stepNumber - 1]}\r\n        onClick={onClick}\r\n      />\r\n      <GameInfo\r\n        stepNumber={stepNumber}\r\n        winnerStepNumber={winnerStepNumber}\r\n        inputValue={inputValue}\r\n        debounceForInputChange={debounceForInputChange()}\r\n      />\r\n      <RecordList history={history} backToThePast={backToThePast} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./normalize.css\";\r\nimport App from \"./components/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { ThemeProvider } from \"styled-components\";\r\n\r\nconst theme = {\r\n  squareSize: 30,\r\n  maxBoardSize: 19,\r\n};\r\n\r\nReactDOM.render(\r\n  <ThemeProvider theme={theme}>\r\n    <App />\r\n  </ThemeProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}